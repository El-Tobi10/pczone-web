
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.8.2
 * Query Engine version: 2060c79ba17c6bb9f5823312b6f6b7f4a845738e
 */
Prisma.prismaVersion = {
  client: "6.8.2",
  engine: "2060c79ba17c6bb9f5823312b6f6b7f4a845738e"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.CoolersScalarFieldEnum = {
  id: 'id',
  name: 'name',
  price: 'price',
  rpm: 'rpm',
  noise: 'noise',
  color: 'color',
  size: 'size',
  imagen_url: 'imagen_url'
};

exports.Prisma.CpusScalarFieldEnum = {
  id: 'id',
  name: 'name',
  price: 'price',
  core_count: 'core_count',
  core_clock: 'core_clock',
  boost_clock: 'boost_clock',
  tdp: 'tdp',
  graphics: 'graphics',
  smt: 'smt',
  imagen_url: 'imagen_url'
};

exports.Prisma.FuentesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  price: 'price',
  type: 'type',
  efficiency: 'efficiency',
  wattage: 'wattage',
  modular: 'modular',
  color: 'color',
  imagen_url: 'imagen_url'
};

exports.Prisma.GabinetesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  price: 'price',
  type: 'type',
  color: 'color',
  psu: 'psu',
  side_panel: 'side_panel',
  external_volume: 'external_volume',
  internal_35_bays: 'internal_35_bays',
  imagen_url: 'imagen_url'
};

exports.Prisma.GraficasScalarFieldEnum = {
  id: 'id',
  name: 'name',
  price: 'price',
  chipset: 'chipset',
  memory: 'memory',
  core_clock: 'core_clock',
  boost_clock: 'boost_clock',
  color: 'color',
  length: 'length',
  imagen_url: 'imagen_url'
};

exports.Prisma.Memorias_externasScalarFieldEnum = {
  id: 'id',
  name: 'name',
  price: 'price',
  type: 'type',
  interface: 'interface',
  capacity: 'capacity',
  price_per_gb: 'price_per_gb',
  color: 'color',
  imagen_url: 'imagen_url'
};

exports.Prisma.Memorias_internasScalarFieldEnum = {
  id: 'id',
  name: 'name',
  price: 'price',
  capacity: 'capacity',
  price_per_gb: 'price_per_gb',
  type: 'type',
  cache: 'cache',
  form_factor: 'form_factor',
  interface: 'interface',
  imagen_url: 'imagen_url'
};

exports.Prisma.MothersScalarFieldEnum = {
  id: 'id',
  name: 'name',
  price: 'price',
  socket: 'socket',
  form_factor: 'form_factor',
  max_memory: 'max_memory',
  memory_slots: 'memory_slots',
  color: 'color',
  imagen_url: 'imagen_url'
};

exports.Prisma.RamsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  price: 'price',
  speed_channels: 'speed_channels',
  speed_mhz: 'speed_mhz',
  modules_qty: 'modules_qty',
  module_capacity: 'module_capacity',
  price_per_gb: 'price_per_gb',
  color: 'color',
  first_word_latency: 'first_word_latency',
  cas_latency: 'cas_latency',
  imagen_url: 'imagen_url'
};

exports.Prisma.SoundsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  price: 'price',
  channels: 'channels',
  digital_audio: 'digital_audio',
  snr: 'snr',
  sample_rate: 'sample_rate',
  chipset: 'chipset',
  interface: 'interface',
  imagen_url: 'imagen_url'
};

exports.Prisma.UsusariosScalarFieldEnum = {
  id_user: 'id_user',
  nombre: 'nombre',
  apellido: 'apellido',
  mail: 'mail',
  contrasenia: 'contrasenia',
  fecha_nacimiento: 'fecha_nacimiento',
  permisos: 'permisos'
};

exports.Prisma.VendedoresScalarFieldEnum = {
  id_vendedor: 'id_vendedor',
  nombre: 'nombre',
  apellido: 'apellido',
  mail: 'mail',
  contrasenia: 'contrasenia',
  fecha_nacimiento: 'fecha_nacimiento',
  cuil: 'cuil',
  direccion: 'direccion',
  descripcion: 'descripcion'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  coolers: 'coolers',
  cpus: 'cpus',
  fuentes: 'fuentes',
  gabinetes: 'gabinetes',
  graficas: 'graficas',
  memorias_externas: 'memorias_externas',
  memorias_internas: 'memorias_internas',
  mothers: 'mothers',
  rams: 'rams',
  sounds: 'sounds',
  ususarios: 'ususarios',
  vendedores: 'vendedores'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
